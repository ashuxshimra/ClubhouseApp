.exploreContainer{
    padding: 0 0.5em;
    height: 100%;
    overflow: auto;
    padding-top: 5.2em;
}
.exploreContainer h6{
    font-size: 0.975em;
    font-weight: 500;
    color: #bbbbbb;
    margin: 1.5em 0 0.5em 0;
}
.showMore{
    display: flex;
    align-items: center;
    position: absolute;
    bottom: 2px;
    /* combination used to center a button/div */
    left: 50%;
    transform: translateX(-50%);
    /* The !important declaration is used to give this rule the highest priority, overriding any other conflicting background-color rules for the element. This means that even if there are other CSS rules that try to set a different background color for the same element, the color specified in this rule will take precedence. */
    background-color: #f4f4f4 !important; 
    border: none !important;
    color: #aaaaaa !important;
    box-shadow: 0px 2px 3px #cccccc;
    font-weight: 500 !important ;

}
.showMore span{
    font-size: 0.775em !important;
    margin-top: 0.4em;
    margin-left: 0.5em;
}
.peopleContainer{
    background-color: #ffffff;
    margin: 0 -0.5em;
    padding: 0.5em 0.5em 1.5em 0.5em;
    position: relative;
    /* this is thye parent contaienr of show more button so if here done position relative and there done bottom then relative to only it will style it is submergiung inside this container */
   overflow: hidden;
}
.peopleContainer h5{
    color: var(--textColor);
    font-size: 1.1em;
    margin-bottom: 0.2em;
}
.peopleContainer p{
    color: var(--textColor);
    font-size: 0.9em;
    margin: 0;
    display: block;
    display: -webkit-box;
    width: 173px;
    height: fit-content;
    line-height: 1.15 ;
    -webkit-line-clamp: 2;
    -webkit-line-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    color: #aaaaaa;
}
.peopleContainer button{
    background-color: transparent;
    border: 2px solid var(--btnBgColor);
    border-radius: 2em;
    color: var(--btnBgColor);
    font-weight: 400;
    font-size: 1em;
    padding: 0.1em 1.2em;
}

.peopleContainer > div{
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.5em;

}
.peopleContainer img{
    width: 40px;
    border-radius: 1.1em;
}

.conversationCard{
    background-color: #ffffff ;
    border-radius: 0.5em;
    padding: 0.5em;
    box-shadow: 0px 2px 3px #cccccc;
}
.conversationCard h6{
    color: var(--textColor);
    font-size: 1em;
    /* to shrink the distance between h6 and its top border and also can be done same for bottom case , so margin reduced and everything shifts upwards within container */
    margin: 0; 
    display: flex;
    align-items:center;
}
.conversationCard span{
    margin-right: 0.2em;

}
.conversationCard p{
    margin: 0;
    color: #aaaaaa;
    line-height: 1.2;
    font-size: 0.8em;
}
.header {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    z-index: 5;
    padding: 0.5em;
}

.head{
    /* display: flex; */
    /* align-items: center; */

    text-align: center;
    padding: 0.5em 0.5em;
    /* now acc to this container , the child container will move when done left r b t */
    position: relative;
    margin-bottom: 0.5em;
}
.head img{
    /* display: flex;
    align-items: center;
    margin-left: 50%;
    transform: translateX(-50%);
    font-size: 1.4em;
    font-weight: 700; */
    width: 20px;
    /* now it is on top of document flow so without it affecting others position move it acc */
    position: absolute;
    left: 0px; 
    /* horizontal cenetring of div */
    top: 50%;
    transform: translateY(-50%);

}
.head h3{
    margin: 0;
    font-size: 1.2em;
}
